version: '3.8'

services:
    db:
        container_name: db
        image: postgres:13
        restart: always
        environment:
            POSTGRES_PASSWORD: passNotSecur3
            POSTGRES_DB: bookstore
        ports:
            - 15432:5432

    php-fpm:
        container_name: php-fpm
        build:
            context: .
            dockerfile: ./docker/php-fpm/Dockerfile
        depends_on:
            - db
        environment:
            - APP_ENV=${APP_ENV}
            - APP_SECRET=${APP_SECRET}
            - DATABASE_URL=${DATABASE_URL}
        volumes:
            - ./:/var/www

    nginx:
        container_name: nginx
        build:
            context: ./docker/nginx
        volumes:
            - ./:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/nginx/sites/:/etc/nginx/sites-available
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d
            - ./docker/nginx/log/:/var/log/nginx
        depends_on:
            - php-fpm
        labels:
            - "traefik.http.routers.bookstore.rule=Host(`bookstore.traefik.me`)"
            - "traefik.http.routers.bookstore-tls.tls.domains[0].main=bookstore.traefik.me"
            - "traefik.http.routers.bookstore-tls.tls.domains[0].sans=bookstore-*.traefik.me"
            - "traefik.http.routers.bookstore.tls=true"

    traefik:
        image: traefik:v2.1.2
        command:
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.docker=true
        ports:
            - 80:80
            - 443:443
        labels:
            - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
            - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
            - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
            - traefik.http.routers.http_catchall.entrypoints=http
            - traefik.http.routers.http_catchall.middlewares=https_redirect
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
            - ./docker/traefik/tls.yml:/etc/traefik/tls.yml
            - certs:/etc/ssl/traefik

    reverse-proxy-https-helper:
        image: alpine
        command: sh -c "cd /etc/ssl/traefik
            && wget traefik.me/cert.pem -O cert.pem
            && wget traefik.me/privkey.pem -O privkey.pem"
        volumes:
            - certs:/etc/ssl/traefik

volumes:
    certs: